/** @page glossary_termino Glossary: Terminology

@section media_sect Media

@subsection m_prop Media property

A property that belongs to a media, e.g. title. These are parsed and
returned by a @ref m_script.

@sa QuviMediaProperty
@sa quvi_get

@subsection m_stream_fmt_id Media stream format ID

A string value that is used to identify the @ref m_stream. They are
generated for each available media stream. They may vary per website.

The @ref m_stream_fmt_id may consist of the properties of:
@li Media container (e.g. "WebM")
@li Media quality (e.g. "hd720")
@li Video encoding (e.g. "VP8")
@li Video height (e.g. "720")

Whether they are used in the @ref m_stream_fmt_id depends on whether the
website has made the data available, and whether the @ref m_script parses
the properties and uses them.

Sometimes these IDs may as simple as "hd" or "sd", although as of
libquvi(-scripts) 1.0 the media scripts are expected to use the
"standardized representation of the stream format ID" whenever
possible. A typical ID would look like:

@verbatim
$quality_$container_$encoding_$height(p)
@endverbatim

Examples:
@verbatim
# DailyMotion: A text book example
hq_mp4_h264_480p

# YouTube: Similar, but uses the container value instead of the video
# encoding value. Uses also the 'itag' value which is specific to YouTube.
hd720_webm_i45_720p
@endverbatim

@sa @ref parse_media

@subsection ms_prop Media stream property

A @ref m_prop that is specific to a @ref m_stream. Like with
@ref m_prop, these are parsed and returned by a @ref m_script.

@sa QuviMediaProperty
@sa quvi_get

@subsection m_stream Media stream

A stream of media, e.g. multimedia. Some websites provide >1 media
streams for the hosted content, in which case the @ref m_script will
usually try to parse the URLs to these streams and return them to the
library.

@sa quvi_media_stream_select
@sa QuviMediaProperty
@sa @ref m_stream_url
@sa quvi_get

@subsection m_url Media URL

An Internet address to the media, e.g. "http://youtube.com/watch?v=foo".
This URL should not be confused with @ref m_stream_url.

@note This value is accessible to the scripts as "qargs.input_url"

@subsection m_stream_url Media stream URL

An Internet address to the @ref m_stream.
This URL should not be confused with @ref m_url.

@section proto_cat Protocol category

An umbrella of different protocol categories that the media scripts
belong to. The category is determined by the @ref m_stream_url returned
by the @ref m_script.

For example, YouTube @ref m_stream_url is of HTTP, youtube.lua
therefore returns the protocol category value of
QUVI_MEDIA_SCRIPT_PROTOCOL_CATEGORY_HTTP.

@sa QUVI_OPTION_MEDIA_SCRIPT_PROTOCOL_CATEGORY
@sa QuviMediaScriptProtocolCategory

@section plist Playlist

A collection of @ref m_url s.

@section sh_url Shortened URL

An URL that has been "compressed", or "shortened", by a service such as
is.gd or bit.ly .

@section verification Verification of an URL

Until libquvi 1.0 this was a process that took place @ref m_stream_url
immediately after returning it from a @ref m_script . The purpose of
this process was to retrieve the content-length, the content-type and
the file extension (parsed from the content-type) values.

This step was removed in libquvi 1.0, but an additional function set was
added to the API that could be used if necessary.

The "verification" is a loose term here, and is being called as such
(in 1.0) for historical reasons.

@note Works with HTTP(S) URLs only

@sa quvi_verify_new
*/
