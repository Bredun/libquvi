/** @page glossary_termino Glossary: Terminology

@section m_format Media format

While most websites support only one flash media stream, there are
others (e.g. youtube, vimeo) that provide additional formats that may
be accessed. The quvi project uses the "media format" loosely to describe
a generic format string that is used with it.

Many websites use different combinations of the containers (e.g. WebM) and
encoding (e.g. VP8). This means two things:

@li The available formats have to be <b>queried for each media URL</b>
@li The available format strings are <b>dynamically created</b>

The reason querying must be done for each media URL is because websites
often use different and unique media stream URLs for different formats.

Typically, the media scripts return the format string in the following format:

@li "$container_$height"p

The exception to the above comes with the websites that promote some
specific format ID scheme that can be parsed from the server returned
data, e.g.

@li "fmt$id_$height" (e.g. "fmt43_360p") with YouTube
@li "$quality" (e.g. "hd" or "sd") with Vimeo

To request a different format, the application must set
@ref QUVI_OPTION_REQUEST_FORMAT with @ref quvi_set.

@sa @ref query_formats

@section ms_url Media stream URL

An URL from which an application can access the media stream data.

@section m_url Media URL

An URL that points to the media (e.g. "http://youtube.com/watch?v=foo"),
not to be confused with @ref ms_url.

@note @ref m_script accesses this value via "input_url".

@section plist Playlist

Typically, a collection of @ref m_url s.
*/
